#!/bin/bash

rm -f "$2/tableau.html" ;

echo "Les urls SONT DANS  : $1" ;
echo "On créé le tableau HTML dans : $2" ;
echo "Le motif cherché est : $3" ;
#-------------------------------------------------------

echo "<html><head><meta charset=\"utf-8\" /><title>TABLEAU D'URLs</title></head><body>" >> "$2/tableau.html";
numerotableau=1;
motif=$3 ;

for fichier in $(ls $1)
	do
	compteur=1 ;
	echo "$1/$fichier" ;
	echo "<table border=\"2\" align=\"center\" width=\"80%\">" >> "$2/tableau.html" ;
	echo "<tr bgcolor=\"grey\">
	<td>N°</td>
	<td>URL</td>
	<td>Code http</td>
	<td>Encodage</td>
	<td>Page aspirée</td>
	<td>Dump</td>
	<td>Segmentation</td>
	<td>Filtrage Txt</td>
	<td>Filtrage Html</td>
	<td>Index</td>
	<td>Bitexte</td>
	<td>Fq Motif</td>
	</tr>" >> "$2/tableau.html" ;
	for ligne in $(cat "$1/$fichier")
		do
		echo "----------------------------------------------";
		echo "Traitement de l'URL : $ligne";
		echo "----------------------------------------------";
		#-----------------------------------------------------------
		coderetourhttp=$(curl -SIL -o tmp.txt  -w %{http_code} $ligne);
		echo "CODE HTTP : $coderetourhttp";

		if [[ $coderetourhttp == 200 ]]
			then
			#-----------------------------------------------------------
			curl -L $ligne > ./PAGES-ASPIREES/$numerotableau-$compteur.html ;
			#-----------------------------------------------------------
			encodage=$(sed -e "s/>/\n/g" < ./PAGES-ASPIREES/$numerotableau-$compteur.html | egrep "(meta)*.+charset" | egrep -o "charset *=( |\'|\")*[^ \'\",>]+" | cut -f2 -d"=" | egrep -o "(\w|-)+" | uniq -i | tr "[a-z]" "[A-Z]" | tr -d "\n" | tr -d "\r" | head -1 | tr -d "\'" | tr -d "\"") ;
			echo "ENCODAGE DETECTE PAR CURL : $encodage";
			#-----------------------------------------------------------
			# si coderetourhttp est égale à 200 et l'encodage est "UTF-8" en même temps
			if [[ $encodage == "UTF-8" ]]
				then
				#-----------------------------------------------------------
				# On remplit le tableau : 1 ligne par URL et autant de colonnes que de traitement réalisés
				#-----------------------------------------------------------
				# 1. On lynx la page aspirée
				# Pour le dump via LYNX on travaille sur la page aspirée
				lynx -dump -nolist -assume_charset=$encodage -display_charset=$encodage "./PAGES-ASPIREES/$numerotableau-$compteur.html" > ./DUMP-TEXT/$numerotableau-$compteur.txt;
				#-----------------------------------------------------------
				# 2. On crée le fichier contexte TXT via egrep en segmentant le texte
				bash ./stanford-segmenter/segment.sh -k ctb ./DUMP-TEXT/$numerotableau-$compteur.txt "UTF-8" "0" > ./SEGMENTATIONS/$numerotableau-$compteur.txt
				egrep -i -C2 "$motif" ./SEGMENTATIONS/$numerotableau-$compteur.txt > ./CONTEXTES/$numerotableau-$compteur.txt;
				#-----------------------------------------------------------
				# 3. Fq motif
				nbmotif=$(egrep -coi "$motif" ./SEGMENTATIONS/$numerotableau-$compteur.txt);
				#-----------------------------------------------------------
				# 4. contexte html
				perl ./minigrep/minigrepmultilingue.pl "utf-8" ./SEGMENTATIONS/$numerotableau-$compteur.txt ./minigrep/parametre-motif.txt ;
				mv resultat-extraction.html ./CONTEXTES/$numerotableau-$compteur.html ;
				#-----------------------------------------------------------
				# 5. index hierarchique
				egrep -o "\w+" ./SEGMENTATIONS/$numerotableau-$compteur.txt | sort | uniq -c | sort -r > ./DUMP-TEXT/index-$numerotableau-$compteur.txt ;
				#-----------------------------------------------------------
				# 6. bigramme
				egrep -o "\w+" ./SEGMENTATIONS/$numerotableau-$compteur.txt > bi1.txt;
				tail -n +2 bi1.txt > bi2.txt ;
				paste bi1.txt bi2.txt > bi3.txt ;
				cat bi3.txt | sort | uniq -c | sort -r > ./DUMP-TEXT/bigramme-$numerotableau-$compteur.txt ;
				#-----------------------------------------------------------
				# 7. on écrit les résultats dans le tableau avec tous les résultats produits
				echo "<tr>
				<td>$compteur</td>
				<td><a href=\"$ligne\" target=\"_blank\">$ligne</a></td>
				<td>$coderetourhttp</td>
				<td>$encodage</td>
				<td><a href=\"../PAGES-ASPIREES/$numerotableau-$compteur.html\">$numerotableau-$compteur.html</a></td>
				<td><a href=\"../DUMP-TEXT/$numerotableau-$compteur.txt\">$numerotableau-$compteur.txt</a></td>
				<td><a href=\"../SEGMENTATIONS/$numerotableau-$compteur.txt\">$numerotableau-$compteur.txt</a></td>
				<td><a href=\"../CONTEXTES/$numerotableau-$compteur.txt\">$numerotableau-$compteur.txt</a></td>
				<td><a href=\"../CONTEXTES/$numerotableau-$compteur.html\">$numerotableau-$compteur.html</a></td>
				<td><a href=\"../DUMP-TEXT/index-$numerotableau-$compteur.txt\">index-$numerotableau-$compteur</a></td>
				<td><a href=\"../DUMP-TEXT/bigramme-$numerotableau-$compteur.txt\">bigramme-$numerotableau-$compteur</a></td>
				<td>$nbmotif</td>
				</tr>" >> "$2/tableau.html";
				#-----------------------------------------------------------
				# Ici on a un URL OK (code http 200, mais l'encodage n'est pas UTF-8)
				else
					retouriconv=$(iconv -l | egrep -o "[-A-Z0-9\_\:]+"| egrep -i  "$encodage");
					if [[ $retouriconv != "" ]]
						then
							echo "Je connais l'encodage!!!"; 
							if [[ $encodage == "CP1251" ]]
							   then 
							   encodage="WINDOWS-1251";
							 fi
							iconv -f $encodage -t UTF-8 ./PAGES-ASPIREES/$numerotableau-$compteur.html > ./PAGES-ASPIREES/$numerotableau-$compteur-utf8.html ;
							 #-----------------------------------------------------------
							 # lynx -dump avec l'encodage trouvé
							lynx -dump -nolist -assume_charset="UTF-8" -display_charset="UTF-8" ./PAGES-ASPIREES/$numerotableau-$compteur-utf8.html > ./DUMP-TEXT/$numerotableau-$compteur.txt ;
							# Contexte TXT
							bash ./stanford-segmenter/segment.sh -k ctb ./DUMP-TEXT/$numerotableau-$compteur.txt "UTF-8" "0" > ./SEGMENTATIONS/$numerotableau-$compteur.txt
							egrep -i -C2 "$motif" ./SEGMENTATIONS/$numerotableau-$compteur.txt > ./CONTEXTES/$numerotableau-$compteur.txt ;
							#-----------------------------------------------------------
							# Fq motif
							nbmotif=$(egrep -coi "$motif" ./SEGMENTATIONS/$numerotableau-$compteur.txt) ;
							#-----------------------------------------------------------
							# Contexte html
							perl ./minigrep/minigrepmultilingue.pl "utf-8" ./SEGMENTATIONS/$numerotableau-$compteur.txt ./minigrep/parametre-motif.txt ;
							mv resultat-extraction.html ./CONTEXTES/$numerotableau-$compteur.html ;
							#-----------------------------------------------------------
							# Index hierarchique
							egrep -o "\w+" ./SEGMENTATIONS/$numerotableau-$compteur.txt | sort | uniq -c | sort -r > ./DUMP-TEXT/index-$numerotableau-$compteur.txt ;
							#-----------------------------------------------------------
							# Bigramme
							egrep -o "\w+" ./SEGMENTATIONS/$numerotableau-$compteur.txt > bi1.txt ;
							tail -n +2 bi1.txt > bi2.txt ;
							paste bi1.txt bi2.txt > bi3.txt ;
							cat bi3.txt | sort | uniq -c | sort -r >  ./DUMP-TEXT/bigramme-$numerotableau-$compteur.txt ;
							#-----------------------------------------------------------
							# Écriture du resultat
							echo "<tr>
							<td>$compteur</td>
							<td><a href=\"$ligne\" target=\"_blank\">$ligne</a></td>
							<td>$coderetourhttp</td>
							<td>$encodage</td>
							<td><a href=\"../PAGES-ASPIREES/$numerotableau-$compteur.html\">$numerotableau-$compteur.html</a></td>
							<td><a href=\"../DUMP-TEXT/$numerotableau-$compteur.txt\">$numerotableau-$compteur.txt</a></td>
							<td><a href=\"../SEGMENTATIONS/$numerotableau-$compteur.txt\">$numerotableau-$compteur.txt</a></td>
							<td><a href=\"../CONTEXTES/$numerotableau-$compteur.txt\">$numerotableau-$compteur.txt</a></td>
							<td><a href=\"../CONTEXTES/$numerotableau-$compteur.html\">$numerotableau-$compteur.html</a></td>
							<td><a href=\"../DUMP-TEXT/index-$numerotableau-$compteur.txt\">index-$numerotableau-$compteur</a></td>
							<td><a href=\"../DUMP-TEXT/bigramme-$numerotableau-$compteur.txt\">bigramme-$numerotableau-$compteur</a></td>
							<td>$nbmotif</td>
							</tr>" >> "$2/tableau.html";
						
						else
						#[[ $retouriconv == "" ]]
							echo "On recherche l'encodage du texte.";
							reponse_iconv=$(egrep -o "charset.?=.?\"?[^\", ;>]+\"?" ./PAGES-ASPIREES/$numerotableau-$compteur.html |cut -f2 -d"="|tr -d '"'| tr -d " "| tr -d "'"| head -1 |tr 'a-z' 'A-Z');
							echo "$reponse_iconv";
							if [[ $reponse_iconv == "" ]]
								then 
									echo "<tr>
									<td>$compteur</td>
									<td><a href=\"$ligne\" target=\"_blank\">$ligne</a></td>
									<td>$coderetourhttp</td>
									<td>$encodage</td>
									<td><a href=\"../PAGES-ASPIREES/$numerotableau-$compteur.html\">$numerotableau-$compteur.html</a></td>
									<td>-</td>
									<td>-</td>
									<td>-</td>
									<td>-</td>
									<td>-</td>
									<td>-</td>
									<td>-</td>
									</tr>" >> "$2/tableau.html";
							elif [[ $reponse_iconv == 'UTF-8' ]]
								then
									echo "reponse_iconv = utf-8.";
									if [[ $encodage == "CP1251" ]]
								    then 
								    encodage="WINDOWS-1251";
								     fi
								lynx -dump -nolist -display_charset=UTF-8 "./PAGES-ASPIREES/$numerotableau-$compteur.html" > ./DUMP-TEXT/$numerotableau-$compteur.txt; 
								 # Contexte TXT
								bash ./stanford-segmenter/segment.sh -k ctb ./DUMP-TEXT/$numerotableau-$compteur.txt "UTF-8" "0" > ./SEGMENTATIONS/$numerotableau-$compteur.txt
						 		egrep -i -C2 "$motif" ./SEGMENTATIONS/$numerotableau-$compteur.txt > ./CONTEXTES/$numerotableau-$compteur.txt ;
								nbmotif=$(egrep -coi "$motif" ./SEGMENTATIONS/$numerotableau-$compteur.txt) ;
								perl ./minigrep/minigrepmultilingue.pl "utf-8" ./SEGMENTATIONS/$numerotableau-$compteur.txt ./minigrep/parametre-motif.txt ;
								mv resultat-extraction.html ./CONTEXTES/$numerotableau-$compteur.html ;
								egrep -o "\w+" ./SEGMENTATIONS/$numerotableau-$compteur.txt | sort | uniq -c | sort -r > ./DUMP-TEXT/index-$numerotableau-$compteur.txt ;
								#-----------------------------------------------------------
								# Bigramme
								egrep -o "\w+" ./SEGMENTATIONS/$numerotableau-$compteur.txt > bi1.txt ;
								tail -n +2 bi1.txt > bi2.txt ;
								paste bi1.txt bi2.txt > bi3.txt ;
								cat bi3.txt | sort | uniq -c | sort -r >  ./DUMP-TEXT/bigramme-$numerotableau-$compteur.txt ;
								#-----------------------------------------------------------
								echo "<tr>
								<td>$compteur</td>
								<td><a href=\"$ligne\" target=\"_blank\">$ligne</a></td>
								<td>$coderetourhttp</td>
								<td>$encodage</td>
								<td><a href=\"../PAGES-ASPIREES/$numerotableau-$compteur.html\">$numerotableau-$compteur.html</a></td>
								<td><a href=\"../DUMP-TEXT/$numerotableau-$compteur.txt\">$numerotableau-$compteur.txt</a></td>
								<td><a href=\"../SEGMENTATIONS/$numerotableau-$compteur.txt\">$numerotableau-$compteur.txt</a></td>
								<td><a href=\"../CONTEXTES/$numerotableau-$compteur.txt\">$numerotableau-$compteur.txt</a></td>
								<td><a href=\"../CONTEXTES/$numerotableau-$compteur.html\">$numerotableau-$compteur.html</a></td>
								<td><a href=\"../DUMP-TEXT/index-$numerotableau-$compteur.txt\">index-$numerotableau-$compteur</a></td>
								<td><a href=\"../DUMP-TEXT/bigramme-$numerotableau-$compteur.txt\">bigramme-$numerotableau-$compteur</a></td>
								<td>$nbmotif</td>
								</tr>" >> "$2/tableau.html";
								
								else
									reponse_iconv2=$(iconv -l | egrep -o "[-A-Z0-9\_\:]+"| egrep -i  "$reponse_iconv"| head -1| tr 'a-z' 'A-Z'); 
									if [[ $reponse_iconv2 == "" ]]
										then
											echo "<tr>
											<td>$compteur</td>
											<td><a href=\"$ligne\" target=\"_blank\">$ligne</a></td>
											<td>$coderetourhttp</td>
											<td>$encodage</td>
											<td><a href=\"../PAGES-ASPIREES/$numerotableau-$compteur.html\">$numerotableau-$compteur.html</a></td>
											<td>-</td>
											<td>-</td>
											<td>-</td>
											<td>-</td>
											<td>-</td>
											<td>-</td>
											<td>-</td>
											</tr>" >> "$2/tableau.html";
										else
											echo "Je connais l'encodage!!!"; 
											if [[ $reponse_iconv == "CP1251" ]]
												then
												reponse_iconv="WINDOWS-1251";
												fi
											lynx -dump -nolist -assume_charset=$reponse_iconv -display_charset=$reponse_iconv "./PAGES-ASPIREES/$numerotableau-$compteur.html" > ./DUMP-TEXT/$numerotableau-$compteur.txt; 
											iconv -f $reponse_iconv -t utf-8 ./DUMP-TEXT/$numerotableau-$compteur.txt > ./DUMP-TEXT/$numerotableau-$compteur-utf8.txt;
											bash ./stanford-segmenter/segment.sh -k ctb ./DUMP-TEXT/$numerotableau-$compteur-utf8.txt "UTF-8" "0" > ./SEGMENTATIONS/$numerotableau-$compteur.txt
						 					egrep -i -C2 "$motif" ./SEGMENTATIONS/$numerotableau-$compteur.txt > ./CONTEXTES/$numerotableau-$compteur.txt ;
											nbmotif=$(egrep -coi "$motif" ./SEGMENTATIONS/$numerotableau-$compteur.txt) ;
											perl ./minigrep/minigrepmultilingue.pl "utf-8" ./SEGMENTATIONS/$numerotableau-$compteur.txt ./minigrep/parametre-motif.txt ;
											mv resultat-extraction.html ./CONTEXTES/$numerotableau-$compteur.html ;
											egrep -o "\w+" ./SEGMENTATIONS/$numerotableau-$compteur.txt | sort | uniq -c | sort -r > ./DUMP-TEXT/index-$numerotableau-$compteur.txt ;
											#-----------------------------------------------------------
											# Bigramme
											egrep -o "\w+" ./SEGMENTATIONS/$numerotableau-$compteur.txt > bi1.txt ;
											tail -n +2 bi1.txt > bi2.txt ;
											paste bi1.txt bi2.txt > bi3.txt ;
											cat bi3.txt | sort | uniq -c | sort -r >  ./DUMP-TEXT/bigramme-$numerotableau-$compteur.txt ;
											#-----------------------------------------------------------
											echo "<tr>
											<td>$compteur</td>
											<td><a href=\"$ligne\" target=\"_blank\">$ligne</a></td>
											<td>$coderetourhttp</td>
											<td>$encodage</td>
											<td><a href=\"../PAGES-ASPIREES/$numerotableau-$compteur.html\">$numerotableau-$compteur.html</a></td>
											<td><a href=\"../DUMP-TEXT/$numerotableau-$compteur.txt\">$numerotableau-$compteur.txt</a></td>
											<td><a href=\"../SEGMENTATIONS/$numerotableau-$compteur.txt\">$numerotableau-$compteur.txt</a></td>
											<td><a href=\"../CONTEXTES/$numerotableau-$compteur.txt\">$numerotableau-$compteur.txt</a></td>
											<td><a href=\"../CONTEXTES/$numerotableau-$compteur.html\">$numerotableau-$compteur.html</a></td>
											<td><a href=\"../DUMP-TEXT/index-$numerotableau-$compteur.txt\">index-$numerotableau-$compteur</a></td>
											<td><a href=\"../DUMP-TEXT/bigramme-$numerotableau-$compteur.txt\">bigramme-$numerotableau-$compteur</a></td>
											<td>$nbmotif</td>
											</tr>" >> "$2/tableau.html";
									fi
							fi
					fi
			fi
			#-------------------------------------------------------
			else
			# Ici on a un URL pas OK (code http différent de 200,
			# Cette URL ne sera pas traitée
			# on la laisse dans le tableau avec des colonnes vides !!!!
			#-----------------------------------------------------------
			# Écriture du resultat
			echo "<tr>
			<td>$compteur</td>
			<td><a href=\"$ligne\" target=\"_blank\">$ligne</a></td>
			<td>$coderetourhttp</td>
			<td>$encodage</td>
			<td>-</td>
			<td>-</td>
			<td>-</td>
			<td>-</td>
			<td>-</td>
			<td>-</td>
			<td>-</td>
			<td>-</td>
			</tr>" >> "$2/tableau.html";
		fi
		#-------------------------------------------------------
		# on incrémente le compteur des URLs
		compteur=$((compteur+1)) ; 
		#-------------------------------------------------------
		# Fin du "parcours" d'un fichier d'URL : lecture ligne à ligne des URLs
		done
	#----------------------------------------------------------------
	# Concaténer tous les fichiers concernés d'un tableau url dans ./URLS
	#----------------------------------------------------------------
	# Parcours du dossier contenant les fichiers dump
	for dump in $(ls -1 ./DUMP-TEXT)
		do
		# Balise "ouverte" pour indiquer le début d'un fichier dump
		echo "<dump=$dump>" >> ./DUMP-TEXT/dump-concat-$numerotableau.txt ;
		# Concaténation
		cat ./DUMP-TEXT/$dump | tr -d "<" |  tr -d ">" >> ./DUMP-TEXT/dump-concat-$numerotableau.txt ;
		# Balise "fermée" pour indiquer la fin d'un fichier dump
		echo "</dump>" >> ./DUMP-TEXT/dump-concat-$numerotableau.txt ;
		done
	#----------------------------------------------------------------
	# Parcours du dossier contenant les fichiers segmentation
	for seg in $(ls -1 ./SEGMENTATIONS)
		do
		# Balise "ouverte" pour indiquer le début d'un fichier segmentation
		echo "<segmentation=$seg>" >> ./SEGMENTATIONS/segmentation-concat-$numerotableau.txt ;
		# Concaténation
		cat ./SEGMENTATIONS/$seg | tr -d "<" |  tr -d ">" >> ./SEGMENTATIONS/segmentation-concat-$numerotableau.txt ;
		# Balise "fermée" pour indiquer la fin d'un fichier segmentation
		echo "</segmentation>" >> ./SEGMENTATIONS/segmentation-concat-$numerotableau.txt.txt ;
		done
	#----------------------------------------------------------------
	# Parcours du dossier contenant les fichiers contexte
	for contexte in $(ls -1 ./CONTEXTES)
		do
		# Balise "ouverte" pour indiquer le début d'un fichier contexte
		echo "<contexte=$contexte>" >> ./CONTEXTES/contexte-concat-$numerotableau.txt ;
		# Concaténation
		cat ./CONTEXTES/$contexte | tr -d "<" |  tr -d ">" >> ./CONTEXTES/contexte-concat-$numerotableau.txt ;
		# Balise "fermée" pour indiquer la fin d'un fichier segmentation
		echo "</contexte>" >> ./CONTEXTES/contexte-concat-$numerotableau.txt ;
		done
	#----------------------------------------------------------------
	# Écriture du resultat
	echo "<tr>
	<td></td>
	<td></td>
	<td></td>
	<td></td>
	<td></td>
	<td><a href=\"../DUMP-TEXT/dump-concat-$numerotableau.txt\" target=\"_blank\">dump_concat.txt</a></td>
	<td><a href=\"../SEGMENTATIONS/segmentation-concat-$numerotableau.txt\" target=\"_blank\">segmentation_concat.txt</a></td>
	<td><a href=\"../CONTEXTES/contexte-concat-$numerotableau.txt\" target=\"_blank\">contexte_concat.txt</a></td>
	<td></td>
	<td></td>
	<td></td>
	<td></td>
	</tr>" >> "$2/tableau.html";
	#----------------------------------------------------------------
	# Séparer deux tableau avec une ligne vide
	echo "</table><br />" >> "$2/tableau.html" ;
	#----------------------------------------------------------------
	# on incrémente le compteur de tableaux
	numerotableau=$((numerotableau+1));
	#----------------------------------------------------------------
	# Fin du parcours du dossier contenant les fichiers URLs
	done
#----------------------------------------------------------------
# Fin du langage HTML
echo "</body></html>" >> "$2/tableau.html" ;
#----------------------------------------------------------------
# Sortir de bash
exit ;
